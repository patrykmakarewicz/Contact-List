@page "/addcontact"
@inject IContactService ContactService

<PageTitle>Counter</PageTitle>

<h1>Add new contact</h1>

<EditForm Model="contact" OnSubmit="HandleSubmit">
    <div>
            <label for="firstname">First Name</label>
        <InputText id="firstname" @bind-Value="contact.FirstName" class="form-control"></InputText>
        </div>
    <div>
            <label for="lastname">Last Name</label>
        <InputText id="firstname" @bind-Value="contact.LastName" class="form-control"></InputText>
    </div>
    <div>
        <label for="phonenumber">Phone Number</label>
        <InputText id="firstname" @bind-Value="contact.PhoneNumber" class="form-control"></InputText>
    </div>
    <div>
        <label for="email">Email</label>
        <InputText id="firstname" @bind-Value="contact.Email" class="form-control"></InputText>
    </div>
    <div>
        <label for="category">Category</label>
        <InputSelect @bind-Value="contact.CategoryId" class="form-select">
            @foreach (var category in ContactService.Category)
            {
                <option value="@category.Id">@category.CategoryName</option>
            }
        </InputSelect>
    </div>
    <button type="submit" class="btn btn-primary">Add Contact</button>
</EditForm>

@code {

    ContactList.Shared.Contact contact = new ContactList.Shared.Contact();

    protected override async Task OnInitializedAsync()
    {
        await ContactService.GetCategories();
        contact.Category = ContactService.Category[0];
        contact.CategoryId = contact.Category.Id;
    }

    async Task HandleSubmit()
    {
        contact.Category = ContactService.Category.Find(o => o.Id == contact.CategoryId);
        await ContactService.AddContact(contact);
    }

}
