@page "/contact"
@page "/contact/{id:int}"
@inject IContactService ContactService

<PageTitle>Contact</PageTitle>

<EditForm Model="contact" OnSubmit="HandleSubmit">
    <div>
        <label for="firstname">First Name</label>
        <InputText id="firstname" @bind-Value="contact.FirstName" class="form-control"></InputText>
    </div>
    <div>
        <label for="lastname">Last Name</label>
        <InputText id="lastname" @bind-Value="contact.LastName" class="form-control"></InputText>
    </div>
    <div>
        <label for="phonenumber">Phone Number</label>
        <InputText id="phonenumber" @bind-Value="contact.PhoneNumber" class="form-control"></InputText>
    </div>
    <div>
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="contact.Email" class="form-control"></InputText>
    </div>
    <div>
        <label for="category">Category</label>
        <InputSelect @bind-Value="contact.CategoryId" class="form-select">
            @foreach (var category in ContactService.Category)
            {
                <option value="@category.Id">@category.CategoryName</option>
            }
        </InputSelect>
    </div>
    <div>
        <label for="categorydesc">Category Description</label>
        <InputText id="categorydescription"
                   disabled="@(contact.CategoryId != 3 ? true : false)"
                   @bind-Value="contact.CategoryDescription"
                   class="form-control">
        </InputText>
    </div>
    <button type="submit" class="btn btn-primary">Update Contact</button>
    <button type="button" class="btn btn-primary" @onclick="RemoveContact">Remove Contact</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    ContactList.Shared.Contact contact = new ContactList.Shared.Contact();

    protected override async Task OnInitializedAsync()
    {
        //buttonText = "Update Contact";
        await ContactService.GetContacts();
        await ContactService.GetCategories();
    }
    protected override async Task OnParametersSetAsync()
    {
        contact = await ContactService.GetContact(Id);
        if (Id == null)
        {
            contact.Category = ContactService.Category[0];
            contact.CategoryId = contact.Category.Id;
        }
        else
        {
            contact = await ContactService.GetContact((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        await ContactService.UpdateContact(contact);
    }

    async Task RemoveContact()
    {
        await ContactService.RemoveContact(contact.Id);
    }
}
